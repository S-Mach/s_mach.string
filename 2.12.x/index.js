Index.PACKAGES = {"s_mach" : [], "s_mach.string" : [{"name" : "s_mach.string.CharGroup", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/string\/CharGroup.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/string\/CharGroup.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/string\/CharGroup.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/string\/CharGroup.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/string\/CharGroup.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/string\/CharGroup.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/string\/CharGroup.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/CharGroup.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/CharGroup.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/CharGroup.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/string\/CharGroup.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/string\/CharGroup.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/string\/CharGroup.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/string\/CharGroup.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/string\/CharGroup.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/string\/CharGroup.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/string\/CharGroup.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/string\/CharGroup.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/string\/CharGroup.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "pattern", "tail" : "(): String", "member" : "s_mach.string.CharGroup.pattern", "link" : "s_mach\/string\/CharGroup.html#pattern:String", "kind" : "abstract def"}], "shortDescription" : "A character group used in a regex to specify either a range ofcharacters, a single character or a character class.", "object" : "s_mach\/string\/CharGroup$.html", "members_object" : [{"label" : "all", "tail" : ": Seq[Product with Serializable with CharGroup]", "member" : "s_mach.string.CharGroup.all", "link" : "s_mach\/string\/CharGroup$.html#all:Seq[ProductwithSerializablewiths_mach.string.CharGroup]", "kind" : "val"}, {"label" : "Space", "tail" : "", "member" : "s_mach.string.CharGroup.Space", "link" : "s_mach\/string\/CharGroup$.html#Space", "kind" : "object"}, {"label" : "Hyphen", "tail" : "", "member" : "s_mach.string.CharGroup.Hyphen", "link" : "s_mach\/string\/CharGroup$.html#Hyphen", "kind" : "object"}, {"label" : "Underscore", "tail" : "", "member" : "s_mach.string.CharGroup.Underscore", "link" : "s_mach\/string\/CharGroup$.html#Underscore", "kind" : "object"}, {"label" : "Digit", "tail" : "", "member" : "s_mach.string.CharGroup.Digit", "link" : "s_mach\/string\/CharGroup$.html#Digit", "kind" : "object"}, {"label" : "LowercaseLetter", "tail" : "", "member" : "s_mach.string.CharGroup.LowercaseLetter", "link" : "s_mach\/string\/CharGroup$.html#LowercaseLetter", "kind" : "object"}, {"label" : "UppercaseLetter", "tail" : "", "member" : "s_mach.string.CharGroup.UppercaseLetter", "link" : "s_mach\/string\/CharGroup$.html#UppercaseLetter", "kind" : "object"}, {"label" : "Whitespace", "tail" : "", "member" : "s_mach.string.CharGroup.Whitespace", "link" : "s_mach\/string\/CharGroup$.html#Whitespace", "kind" : "object"}, {"label" : "Letter", "tail" : "", "member" : "s_mach.string.CharGroup.Letter", "link" : "s_mach\/string\/CharGroup$.html#Letter", "kind" : "object"}, {"label" : "WordLetter", "tail" : "", "member" : "s_mach.string.CharGroup.WordLetter", "link" : "s_mach\/string\/CharGroup$.html#WordLetter", "kind" : "object"}, {"label" : "UnicodeLetter", "tail" : "", "member" : "s_mach.string.CharGroup.UnicodeLetter", "link" : "s_mach\/string\/CharGroup$.html#UnicodeLetter", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/string\/CharGroup$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/string\/CharGroup$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/string\/CharGroup$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/string\/CharGroup$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/string\/CharGroup$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/string\/CharGroup$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/string\/CharGroup$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/CharGroup$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/CharGroup$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/CharGroup$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/string\/CharGroup$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/string\/CharGroup$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/string\/CharGroup$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/string\/CharGroup$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/string\/CharGroup$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/string\/CharGroup$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/string\/CharGroup$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/string\/CharGroup$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/string\/CharGroup$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/string\/CharGroup.html", "kind" : "trait"}, {"name" : "s_mach.string.CharGroupPattern", "shortDescription" : "Convenience object for building and extracting full string patternbased on simple CharGroup regex expressionsNote: a pattern here means a regex that begins with '^^', contains oneset of char groups ('[...]*') and end withs '$'", "object" : "s_mach\/string\/CharGroupPattern$.html", "members_object" : [{"label" : "unapplySeq", "tail" : "(pattern: String): Option[Seq[CharGroup]]", "member" : "s_mach.string.CharGroupPattern.unapplySeq", "link" : "s_mach\/string\/CharGroupPattern$.html#unapplySeq(pattern:String):Option[Seq[s_mach.string.CharGroup]]", "kind" : "def"}, {"label" : "apply", "tail" : "(groups: CharGroup*): Regex", "member" : "s_mach.string.CharGroupPattern.apply", "link" : "s_mach\/string\/CharGroupPattern$.html#apply(groups:s_mach.string.CharGroup*):scala.util.matching.Regex", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/string\/CharGroupPattern$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/string\/CharGroupPattern$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/string\/CharGroupPattern$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/string\/CharGroupPattern$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/string\/CharGroupPattern$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/string\/CharGroupPattern$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/string\/CharGroupPattern$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/CharGroupPattern$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/CharGroupPattern$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/CharGroupPattern$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/string\/CharGroupPattern$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/string\/CharGroupPattern$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/string\/CharGroupPattern$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/string\/CharGroupPattern$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/string\/CharGroupPattern$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/string\/CharGroupPattern$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/string\/CharGroupPattern$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/string\/CharGroupPattern$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/string\/CharGroupPattern$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "s_mach.string.CharGroupRegex", "shortDescription" : "Convenience object for building and extracting all of theCharGroups contained in a simple '[...]' regex expression.", "object" : "s_mach\/string\/CharGroupRegex$.html", "members_object" : [{"label" : "unapplySeq", "tail" : "(s: String): Option[Seq[CharGroup]]", "member" : "s_mach.string.CharGroupRegex.unapplySeq", "link" : "s_mach\/string\/CharGroupRegex$.html#unapplySeq(s:String):Option[Seq[s_mach.string.CharGroup]]", "kind" : "def"}, {"label" : "apply", "tail" : "(groups: CharGroup*): Regex", "member" : "s_mach.string.CharGroupRegex.apply", "link" : "s_mach\/string\/CharGroupRegex$.html#apply(groups:s_mach.string.CharGroup*):scala.util.matching.Regex", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/string\/CharGroupRegex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/string\/CharGroupRegex$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/string\/CharGroupRegex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/string\/CharGroupRegex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/string\/CharGroupRegex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/string\/CharGroupRegex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/string\/CharGroupRegex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/CharGroupRegex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/CharGroupRegex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/CharGroupRegex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/string\/CharGroupRegex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/string\/CharGroupRegex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/string\/CharGroupRegex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/string\/CharGroupRegex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/string\/CharGroupRegex$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/string\/CharGroupRegex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/string\/CharGroupRegex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/string\/CharGroupRegex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/string\/CharGroupRegex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "s_mach.string.Lexer", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/string\/Lexer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/string\/Lexer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/string\/Lexer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/string\/Lexer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/string\/Lexer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/string\/Lexer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/string\/Lexer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/Lexer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/Lexer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/Lexer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/string\/Lexer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/string\/Lexer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/string\/Lexer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/string\/Lexer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/string\/Lexer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/string\/Lexer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/string\/Lexer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/string\/Lexer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/string\/Lexer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "lex", "tail" : "(s: String): LexResult", "member" : "s_mach.string.Lexer.lex", "link" : "s_mach\/string\/Lexer.html#lex(s:String):s_mach.string.LexResult", "kind" : "abstract def"}, {"label" : "tokens", "tail" : "(s: String): Iterator[String]", "member" : "s_mach.string.Lexer.tokens", "link" : "s_mach\/string\/Lexer.html#tokens(s:String):Iterator[String]", "kind" : "abstract def"}], "shortDescription" : "A trait for a lexer that allows separating a string into \"tokens\" and\"delimiters\".", "object" : "s_mach\/string\/Lexer$.html", "members_object" : [{"label" : "SnakeCase", "tail" : ": Lexer", "member" : "s_mach.string.Lexer.SnakeCase", "link" : "s_mach\/string\/Lexer$.html#SnakeCase:s_mach.string.Lexer", "kind" : "implicit val"}, {"label" : "PascalCase", "tail" : ": Lexer", "member" : "s_mach.string.Lexer.PascalCase", "link" : "s_mach\/string\/Lexer$.html#PascalCase:s_mach.string.Lexer", "kind" : "implicit val"}, {"label" : "CamelCase", "tail" : ": Lexer", "member" : "s_mach.string.Lexer.CamelCase", "link" : "s_mach\/string\/Lexer$.html#CamelCase:s_mach.string.Lexer", "kind" : "implicit val"}, {"label" : "Underscore", "tail" : ": Lexer", "member" : "s_mach.string.Lexer.Underscore", "link" : "s_mach\/string\/Lexer$.html#Underscore:s_mach.string.Lexer", "kind" : "implicit val"}, {"label" : "WhitespaceOrUnderscore", "tail" : ": Lexer", "member" : "s_mach.string.Lexer.WhitespaceOrUnderscore", "link" : "s_mach\/string\/Lexer$.html#WhitespaceOrUnderscore:s_mach.string.Lexer", "kind" : "implicit val"}, {"label" : "Whitespace", "tail" : ": Lexer", "member" : "s_mach.string.Lexer.Whitespace", "link" : "s_mach\/string\/Lexer$.html#Whitespace:s_mach.string.Lexer", "kind" : "implicit val"}, {"label" : "whitespaceChars", "tail" : ": Array[Char]", "member" : "s_mach.string.Lexer.whitespaceChars", "link" : "s_mach\/string\/Lexer$.html#whitespaceChars:Array[Char]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/string\/Lexer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/string\/Lexer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/string\/Lexer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/string\/Lexer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/string\/Lexer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/string\/Lexer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/string\/Lexer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/Lexer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/Lexer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/Lexer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/string\/Lexer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/string\/Lexer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/string\/Lexer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/string\/Lexer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/string\/Lexer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/string\/Lexer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/string\/Lexer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/string\/Lexer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/string\/Lexer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/string\/Lexer.html", "kind" : "trait"}, {"name" : "s_mach.string.LexResult", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/string\/LexResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/string\/LexResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/string\/LexResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/string\/LexResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/string\/LexResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/string\/LexResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/string\/LexResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/LexResult.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/LexResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/LexResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/string\/LexResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/string\/LexResult.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/string\/LexResult.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/string\/LexResult.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/string\/LexResult.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/string\/LexResult.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/string\/LexResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/string\/LexResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/string\/LexResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "map", "tail" : "(leadingDelim: (String) ⇒ String, token: (String) ⇒ String, delim: (String) ⇒ String, trailingDelim: (String) ⇒ String): String", "member" : "s_mach.string.LexResult.map", "link" : "s_mach\/string\/LexResult.html#map(leadingDelim:String=>String,token:String=>String,delim:String=>String,trailingDelim:String=>String):String", "kind" : "abstract def"}, {"label" : "foreach", "tail" : "(leadingDelim: (String) ⇒ Unit, token: (String) ⇒ Unit, delim: (String) ⇒ Unit, trailingDelim: (String) ⇒ Unit): Unit", "member" : "s_mach.string.LexResult.foreach", "link" : "s_mach\/string\/LexResult.html#foreach(leadingDelim:String=>Unit,token:String=>Unit,delim:String=>Unit,trailingDelim:String=>Unit):Unit", "kind" : "abstract def"}], "shortDescription" : "A trait for the lazy result of lexing", "trait" : "s_mach\/string\/LexResult.html", "kind" : "trait"}, {"name" : "s_mach.string.RegexCharLexer", "shortDescription" : "", "object" : "s_mach\/string\/RegexCharLexer$.html", "members_object" : [{"label" : "apply", "tail" : "(singleCharTokenRegex: Regex, singleCharDelimRegex: Regex): Lexer", "member" : "s_mach.string.RegexCharLexer.apply", "link" : "s_mach\/string\/RegexCharLexer$.html#apply(singleCharTokenRegex:scala.util.matching.Regex,singleCharDelimRegex:scala.util.matching.Regex):s_mach.string.Lexer", "kind" : "def"}, {"label" : "apply", "tail" : "(delimiterChars: Seq[Char]): Lexer", "member" : "s_mach.string.RegexCharLexer.apply", "link" : "s_mach\/string\/RegexCharLexer$.html#apply(delimiterChars:Seq[Char]):s_mach.string.Lexer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/string\/RegexCharLexer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/string\/RegexCharLexer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/string\/RegexCharLexer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/string\/RegexCharLexer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/string\/RegexCharLexer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/string\/RegexCharLexer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/string\/RegexCharLexer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/RegexCharLexer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/RegexCharLexer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/RegexCharLexer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/string\/RegexCharLexer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/string\/RegexCharLexer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/string\/RegexCharLexer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/string\/RegexCharLexer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/string\/RegexCharLexer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/string\/RegexCharLexer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/string\/RegexCharLexer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/string\/RegexCharLexer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/string\/RegexCharLexer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "s_mach.string.RegexCharTransitionLexer", "shortDescription" : "", "object" : "s_mach\/string\/RegexCharTransitionLexer$.html", "members_object" : [{"label" : "apply", "tail" : "(oomBeforeAfter: Seq[(Regex, Regex)]): Lexer", "member" : "s_mach.string.RegexCharTransitionLexer.apply", "link" : "s_mach\/string\/RegexCharTransitionLexer$.html#apply(oomBeforeAfter:Seq[(scala.util.matching.Regex,scala.util.matching.Regex)]):s_mach.string.Lexer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/string\/RegexCharTransitionLexer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/string\/RegexCharTransitionLexer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/string\/RegexCharTransitionLexer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/string\/RegexCharTransitionLexer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/string\/RegexCharTransitionLexer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/string\/RegexCharTransitionLexer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/string\/RegexCharTransitionLexer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/RegexCharTransitionLexer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/RegexCharTransitionLexer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/RegexCharTransitionLexer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/string\/RegexCharTransitionLexer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/string\/RegexCharTransitionLexer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/string\/RegexCharTransitionLexer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/string\/RegexCharTransitionLexer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/string\/RegexCharTransitionLexer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/string\/RegexCharTransitionLexer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/string\/RegexCharTransitionLexer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/string\/RegexCharTransitionLexer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/string\/RegexCharTransitionLexer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "s_mach.string.S_Mach_String_GridPML", "shortDescription" : "", "members_class" : [{"label" : "printGrid", "tail" : "(): String", "member" : "s_mach.string.S_Mach_String_GridPML.printGrid", "link" : "s_mach\/string\/package$$S_Mach_String_GridPML.html#printGrid:String", "kind" : "def"}, {"member" : "s_mach.string.S_Mach_String_GridPML#<init>", "error" : "unsupported entity"}, {"label" : "self", "tail" : ": IndexedSeq[IndexedSeq[String]]", "member" : "s_mach.string.S_Mach_String_GridPML.self", "link" : "s_mach\/string\/package$$S_Mach_String_GridPML.html#self:IndexedSeq[IndexedSeq[String]]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "s_mach\/string\/package$$S_Mach_String_GridPML.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "s_mach\/string\/package$$S_Mach_String_GridPML.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/string\/package$$S_Mach_String_GridPML.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/string\/package$$S_Mach_String_GridPML.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "s_mach\/string\/package$$S_Mach_String_GridPML.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "s_mach\/string\/package$$S_Mach_String_GridPML.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "s_mach\/string\/package$$S_Mach_String_GridPML.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "s_mach\/string\/package$$S_Mach_String_GridPML.html", "kind" : "class"}, {"name" : "s_mach.string.S_Mach_String_StringPML", "shortDescription" : "", "members_class" : [{"label" : "convert", "tail" : "(f: (String) ⇒ A): Option[A]", "member" : "s_mach.string.S_Mach_String_StringPML.convert", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#convert[A](f:String=>A):Option[A]", "kind" : "def"}, {"label" : "toIntOpt", "tail" : "(): Option[Int]", "member" : "s_mach.string.S_Mach_String_StringPML.toIntOpt", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#toIntOpt:Option[Int]", "kind" : "def"}, {"label" : "toLongOpt", "tail" : "(): Option[Long]", "member" : "s_mach.string.S_Mach_String_StringPML.toLongOpt", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#toLongOpt:Option[Long]", "kind" : "def"}, {"label" : "toDoubleOpt", "tail" : "(): Option[Double]", "member" : "s_mach.string.S_Mach_String_StringPML.toDoubleOpt", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#toDoubleOpt:Option[Double]", "kind" : "def"}, {"label" : "toOption", "tail" : "(): Option[String]", "member" : "s_mach.string.S_Mach_String_StringPML.toOption", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#toOption:Option[String]", "kind" : "def"}, {"label" : "indent", "tail" : "(n: Int, spacer: String): String", "member" : "s_mach.string.S_Mach_String_StringPML.indent", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#indent(n:Int,spacer:String):String", "kind" : "def"}, {"label" : "lex", "tail" : "(lexer: Lexer): LexResult", "member" : "s_mach.string.S_Mach_String_StringPML.lex", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#lex(implicitlexer:s_mach.string.Lexer):s_mach.string.LexResult", "kind" : "def"}, {"label" : "toTokens", "tail" : "(lexer: Lexer): Iterator[String]", "member" : "s_mach.string.S_Mach_String_StringPML.toTokens", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#toTokens(implicitlexer:s_mach.string.Lexer):Iterator[String]", "kind" : "def"}, {"label" : "toSnakeCase", "tail" : "(lexer: Lexer): String", "member" : "s_mach.string.S_Mach_String_StringPML.toSnakeCase", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#toSnakeCase(implicitlexer:s_mach.string.Lexer):String", "kind" : "def"}, {"label" : "toPascalCase", "tail" : "(lexer: Lexer): String", "member" : "s_mach.string.S_Mach_String_StringPML.toPascalCase", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#toPascalCase(implicitlexer:s_mach.string.Lexer):String", "kind" : "def"}, {"label" : "toCamelCase", "tail" : "(lexer: Lexer): String", "member" : "s_mach.string.S_Mach_String_StringPML.toCamelCase", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#toCamelCase(implicitlexer:s_mach.string.Lexer):String", "kind" : "def"}, {"label" : "toTitleCase", "tail" : "(lexer: Lexer): String", "member" : "s_mach.string.S_Mach_String_StringPML.toTitleCase", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#toTitleCase(implicitlexer:s_mach.string.Lexer):String", "kind" : "def"}, {"label" : "toProperCase", "tail" : "(): String", "member" : "s_mach.string.S_Mach_String_StringPML.toProperCase", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#toProperCase:String", "kind" : "def"}, {"label" : "collapseWhitespace", "tail" : "(): String", "member" : "s_mach.string.S_Mach_String_StringPML.collapseWhitespace", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#collapseWhitespace:String", "kind" : "def"}, {"label" : "collapseDelims", "tail" : "(delimiterSubst: String)(lexer: Lexer): String", "member" : "s_mach.string.S_Mach_String_StringPML.collapseDelims", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#collapseDelims(delimiterSubst:String)(implicitlexer:s_mach.string.Lexer):String", "kind" : "def"}, {"label" : "mapTokens", "tail" : "(f: (String) ⇒ String)(lexer: Lexer): String", "member" : "s_mach.string.S_Mach_String_StringPML.mapTokens", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#mapTokens(f:String=>String)(implicitlexer:s_mach.string.Lexer):String", "kind" : "def"}, {"label" : "ensureSuffix", "tail" : "(suffix: String): String", "member" : "s_mach.string.S_Mach_String_StringPML.ensureSuffix", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#ensureSuffix(suffix:String):String", "kind" : "def"}, {"label" : "findAllReplaceTokens", "tail" : "(zomFindReplace: Seq[(Seq[String], String)], caseSensitive: Boolean)(lexer: Lexer): String", "member" : "s_mach.string.S_Mach_String_StringPML.findAllReplaceTokens", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#findAllReplaceTokens(zomFindReplace:Seq[(Seq[String],String)],caseSensitive:Boolean)(implicitlexer:s_mach.string.Lexer):String", "kind" : "def"}, {"label" : "findAllReplace", "tail" : "(zomFindReplace: Seq[(Seq[String], String)], caseSensitive: Boolean): String", "member" : "s_mach.string.S_Mach_String_StringPML.findAllReplace", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#findAllReplace(zomFindReplace:Seq[(Seq[String],String)],caseSensitive:Boolean):String", "kind" : "def"}, {"label" : "findReplaceTokens", "tail" : "(zomFindReplace: Seq[(String, String)], caseSensitive: Boolean)(lexer: Lexer): String", "member" : "s_mach.string.S_Mach_String_StringPML.findReplaceTokens", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#findReplaceTokens(zomFindReplace:Seq[(String,String)],caseSensitive:Boolean)(implicitlexer:s_mach.string.Lexer):String", "kind" : "def"}, {"label" : "findReplace", "tail" : "(zomFindReplace: Seq[(String, String)], caseSensitive: Boolean): String", "member" : "s_mach.string.S_Mach_String_StringPML.findReplace", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#findReplace(zomFindReplace:Seq[(String,String)],caseSensitive:Boolean):String", "kind" : "def"}, {"label" : "findRegexReplace", "tail" : "(zomRegex: Seq[(Regex, String)]): String", "member" : "s_mach.string.S_Mach_String_StringPML.findRegexReplace", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#findRegexReplace(zomRegex:Seq[(scala.util.matching.Regex,String)]):String", "kind" : "def"}, {"label" : "findRegexReplaceMatch", "tail" : "(zomRegex: Seq[(Regex, (Match) ⇒ String)]): String", "member" : "s_mach.string.S_Mach_String_StringPML.findRegexReplaceMatch", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#findRegexReplaceMatch(zomRegex:Seq[(scala.util.matching.Regex,util.matching.Regex.Match=>String)]):String", "kind" : "def"}, {"member" : "s_mach.string.S_Mach_String_StringPML#<init>", "error" : "unsupported entity"}, {"label" : "self", "tail" : ": String", "member" : "s_mach.string.S_Mach_String_StringPML.self", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#self:String", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "s_mach\/string\/package$$S_Mach_String_StringPML.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "s_mach\/string\/package$$S_Mach_String_StringPML.html", "kind" : "class"}], "s_mach.string.impl" : [{"name" : "s_mach.string.impl.AbstractLexResult", "members_trait" : [{"label" : "toString", "tail" : "(): String", "member" : "s_mach.string.impl.AbstractLexResult.toString", "link" : "s_mach\/string\/impl\/AbstractLexResult.html#toString():String", "kind" : "def"}, {"label" : "map", "tail" : "(leadingDelim: (String) ⇒ String, token: (String) ⇒ String, delimiter: (String) ⇒ String, trailingDelim: (String) ⇒ String): String", "member" : "s_mach.string.impl.AbstractLexResult.map", "link" : "s_mach\/string\/impl\/AbstractLexResult.html#map(leadingDelim:String=>String,token:String=>String,delimiter:String=>String,trailingDelim:String=>String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/string\/impl\/AbstractLexResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/string\/impl\/AbstractLexResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/string\/impl\/AbstractLexResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/string\/impl\/AbstractLexResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/string\/impl\/AbstractLexResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/string\/impl\/AbstractLexResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/string\/impl\/AbstractLexResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/impl\/AbstractLexResult.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/impl\/AbstractLexResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/impl\/AbstractLexResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/string\/impl\/AbstractLexResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/string\/impl\/AbstractLexResult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/string\/impl\/AbstractLexResult.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/string\/impl\/AbstractLexResult.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/string\/impl\/AbstractLexResult.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/string\/impl\/AbstractLexResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/string\/impl\/AbstractLexResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/string\/impl\/AbstractLexResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "foreach", "tail" : "(leadingDelim: (String) ⇒ Unit, token: (String) ⇒ Unit, delim: (String) ⇒ Unit, trailingDelim: (String) ⇒ Unit): Unit", "member" : "s_mach.string.LexResult.foreach", "link" : "s_mach\/string\/impl\/AbstractLexResult.html#foreach(leadingDelim:String=>Unit,token:String=>Unit,delim:String=>Unit,trailingDelim:String=>Unit):Unit", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "s_mach\/string\/impl\/AbstractLexResult.html", "kind" : "trait"}, {"name" : "s_mach.string.impl.CharGroupOps", "shortDescription" : "", "object" : "s_mach\/string\/impl\/CharGroupOps$.html", "members_object" : [{"label" : "unapplyCharGroupPattern", "tail" : "(s: String): Option[Seq[CharGroup]]", "member" : "s_mach.string.impl.CharGroupOps.unapplyCharGroupPattern", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#unapplyCharGroupPattern(s:String):Option[Seq[s_mach.string.CharGroup]]", "kind" : "def"}, {"label" : "unapplyCharGroupPatternRegex", "tail" : ": Regex", "member" : "s_mach.string.impl.CharGroupOps.unapplyCharGroupPatternRegex", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#unapplyCharGroupPatternRegex:scala.util.matching.Regex", "kind" : "val"}, {"label" : "mkCharGroupPattern", "tail" : "(groups: CharGroup*): Regex", "member" : "s_mach.string.impl.CharGroupOps.mkCharGroupPattern", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#mkCharGroupPattern(groups:s_mach.string.CharGroup*):scala.util.matching.Regex", "kind" : "def"}, {"label" : "unapplyCharGroupRegex", "tail" : "(s: String): Option[Seq[CharGroup]]", "member" : "s_mach.string.impl.CharGroupOps.unapplyCharGroupRegex", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#unapplyCharGroupRegex(s:String):Option[Seq[s_mach.string.CharGroup]]", "kind" : "def"}, {"label" : "sortedCharGroups", "tail" : ": Vector[Product with Serializable with CharGroup]", "member" : "s_mach.string.impl.CharGroupOps.sortedCharGroups", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#sortedCharGroups:Vector[ProductwithSerializablewiths_mach.string.CharGroup]", "kind" : "val"}, {"label" : "mkCharGroupRegex", "tail" : "(groups: CharGroup*): Regex", "member" : "s_mach.string.impl.CharGroupOps.mkCharGroupRegex", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#mkCharGroupRegex(groups:s_mach.string.CharGroup*):scala.util.matching.Regex", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/string\/impl\/CharGroupOps$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/string\/impl\/CharGroupOps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "s_mach.string.impl.PrintGridImpl", "shortDescription" : "", "object" : "s_mach\/string\/impl\/PrintGridImpl$.html", "members_object" : [{"label" : "printGrid", "tail" : "(data: IndexedSeq[IndexedSeq[String]]): String", "member" : "s_mach.string.impl.PrintGridImpl.printGrid", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#printGrid[A](data:IndexedSeq[IndexedSeq[String]]):String", "kind" : "def"}, {"label" : "rowSep", "tail" : ": String", "member" : "s_mach.string.impl.PrintGridImpl.rowSep", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#rowSep:String", "kind" : "val"}, {"label" : "colSep", "tail" : ": String", "member" : "s_mach.string.impl.PrintGridImpl.colSep", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#colSep:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/string\/impl\/PrintGridImpl$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "s_mach.string.impl.RegexCharLexerImpl", "shortDescription" : "", "members_class" : [{"label" : "lex", "tail" : "(s: String): AbstractLexResult", "member" : "s_mach.string.impl.RegexCharLexerImpl.lex", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#lex(s:String):s_mach.string.impl.AbstractLexResult", "kind" : "def"}, {"label" : "tokenBoundaryRegex", "tail" : ": Regex", "member" : "s_mach.string.impl.RegexCharLexerImpl.tokenBoundaryRegex", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#tokenBoundaryRegex:scala.util.matching.Regex", "kind" : "val"}, {"label" : "tokens", "tail" : "(s: String): Iterator[String]", "member" : "s_mach.string.impl.RegexCharLexerImpl.tokens", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#tokens(s:String):Iterator[String]", "kind" : "def"}, {"label" : "separateRegex", "tail" : ": Regex", "member" : "s_mach.string.impl.RegexCharLexerImpl.separateRegex", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#separateRegex:scala.util.matching.Regex", "kind" : "val"}, {"member" : "s_mach.string.impl.RegexCharLexerImpl#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/string\/impl\/RegexCharLexerImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "s_mach\/string\/impl\/RegexCharLexerImpl.html", "kind" : "class"}, {"name" : "s_mach.string.impl.RegexCharTransitionLexerImpl", "shortDescription" : "", "members_class" : [{"label" : "lex", "tail" : "(s: String): AbstractLexResult", "member" : "s_mach.string.impl.RegexCharTransitionLexerImpl.lex", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#lex(s:String):s_mach.string.impl.AbstractLexResult", "kind" : "def"}, {"label" : "tokens", "tail" : "(s: String): Iterator[String]", "member" : "s_mach.string.impl.RegexCharTransitionLexerImpl.tokens", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#tokens(s:String):Iterator[String]", "kind" : "def"}, {"label" : "regex", "tail" : ": Regex", "member" : "s_mach.string.impl.RegexCharTransitionLexerImpl.regex", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#regex:scala.util.matching.Regex", "kind" : "val"}, {"member" : "s_mach.string.impl.RegexCharTransitionLexerImpl#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "s_mach\/string\/impl\/RegexCharTransitionLexerImpl.html", "kind" : "class"}, {"name" : "s_mach.string.impl.StringOps", "shortDescription" : "", "object" : "s_mach\/string\/impl\/StringOps$.html", "members_object" : [{"label" : "convert", "tail" : "(s: String, f: (String) ⇒ A): Option[A]", "member" : "s_mach.string.impl.StringOps.convert", "link" : "s_mach\/string\/impl\/StringOps$.html#convert[A](s:String,f:String=>A):Option[A]", "kind" : "def"}, {"label" : "toIntOpt", "tail" : "(s: String): Option[Int]", "member" : "s_mach.string.impl.StringOps.toIntOpt", "link" : "s_mach\/string\/impl\/StringOps$.html#toIntOpt(s:String):Option[Int]", "kind" : "def"}, {"label" : "toLongOpt", "tail" : "(s: String): Option[Long]", "member" : "s_mach.string.impl.StringOps.toLongOpt", "link" : "s_mach\/string\/impl\/StringOps$.html#toLongOpt(s:String):Option[Long]", "kind" : "def"}, {"label" : "toDoubleOpt", "tail" : "(s: String): Option[Double]", "member" : "s_mach.string.impl.StringOps.toDoubleOpt", "link" : "s_mach\/string\/impl\/StringOps$.html#toDoubleOpt(s:String):Option[Double]", "kind" : "def"}, {"label" : "toOption", "tail" : "(s: String): Option[String]", "member" : "s_mach.string.impl.StringOps.toOption", "link" : "s_mach\/string\/impl\/StringOps$.html#toOption(s:String):Option[String]", "kind" : "def"}, {"label" : "indent", "tail" : "(s: String, n: Int, spacer: String): String", "member" : "s_mach.string.impl.StringOps.indent", "link" : "s_mach\/string\/impl\/StringOps$.html#indent(s:String,n:Int,spacer:String):String", "kind" : "def"}, {"label" : "toSnakeCase", "tail" : "(s: String)(lexer: Lexer): String", "member" : "s_mach.string.impl.StringOps.toSnakeCase", "link" : "s_mach\/string\/impl\/StringOps$.html#toSnakeCase(s:String)(implicitlexer:s_mach.string.Lexer):String", "kind" : "def"}, {"label" : "toPascalCase", "tail" : "(s: String)(lexer: Lexer): String", "member" : "s_mach.string.impl.StringOps.toPascalCase", "link" : "s_mach\/string\/impl\/StringOps$.html#toPascalCase(s:String)(implicitlexer:s_mach.string.Lexer):String", "kind" : "def"}, {"label" : "toCamelCase", "tail" : "(s: String)(lexer: Lexer): String", "member" : "s_mach.string.impl.StringOps.toCamelCase", "link" : "s_mach\/string\/impl\/StringOps$.html#toCamelCase(s:String)(implicitlexer:s_mach.string.Lexer):String", "kind" : "def"}, {"label" : "toTitleCase", "tail" : "(s: String)(lexer: Lexer): String", "member" : "s_mach.string.impl.StringOps.toTitleCase", "link" : "s_mach\/string\/impl\/StringOps$.html#toTitleCase(s:String)(implicitlexer:s_mach.string.Lexer):String", "kind" : "def"}, {"label" : "mapTokens", "tail" : "(s: String)(f: (String) ⇒ String)(lexer: Lexer): String", "member" : "s_mach.string.impl.StringOps.mapTokens", "link" : "s_mach\/string\/impl\/StringOps$.html#mapTokens(s:String)(f:String=>String)(implicitlexer:s_mach.string.Lexer):String", "kind" : "def"}, {"label" : "toProperCase", "tail" : "(s: String): String", "member" : "s_mach.string.impl.StringOps.toProperCase", "link" : "s_mach\/string\/impl\/StringOps$.html#toProperCase(s:String):String", "kind" : "def"}, {"label" : "collapseWhitespace", "tail" : "(s: String): String", "member" : "s_mach.string.impl.StringOps.collapseWhitespace", "link" : "s_mach\/string\/impl\/StringOps$.html#collapseWhitespace(s:String):String", "kind" : "def"}, {"label" : "collapseDelims", "tail" : "(s: String, delimiterSubst: String)(lexer: Lexer): String", "member" : "s_mach.string.impl.StringOps.collapseDelims", "link" : "s_mach\/string\/impl\/StringOps$.html#collapseDelims(s:String,delimiterSubst:String)(implicitlexer:s_mach.string.Lexer):String", "kind" : "def"}, {"label" : "findAllReplaceTokens", "tail" : "(s: String, caseSensitive: Boolean, fr: Seq[(Seq[String], String)])(lexer: Lexer): String", "member" : "s_mach.string.impl.StringOps.findAllReplaceTokens", "link" : "s_mach\/string\/impl\/StringOps$.html#findAllReplaceTokens(s:String,caseSensitive:Boolean,fr:Seq[(Seq[String],String)])(implicitlexer:s_mach.string.Lexer):String", "kind" : "def"}, {"label" : "findAllReplace", "tail" : "(s: String, caseSensitive: Boolean, fr: Seq[(Seq[String], String)]): String", "member" : "s_mach.string.impl.StringOps.findAllReplace", "link" : "s_mach\/string\/impl\/StringOps$.html#findAllReplace(s:String,caseSensitive:Boolean,fr:Seq[(Seq[String],String)]):String", "kind" : "def"}, {"label" : "findReplaceTokens", "tail" : "(s: String, caseSensitive: Boolean, fr: Seq[(String, String)])(lexer: Lexer): String", "member" : "s_mach.string.impl.StringOps.findReplaceTokens", "link" : "s_mach\/string\/impl\/StringOps$.html#findReplaceTokens(s:String,caseSensitive:Boolean,fr:Seq[(String,String)])(implicitlexer:s_mach.string.Lexer):String", "kind" : "def"}, {"label" : "findReplace", "tail" : "(s: String, caseSensitive: Boolean, fr: Seq[(String, String)]): String", "member" : "s_mach.string.impl.StringOps.findReplace", "link" : "s_mach\/string\/impl\/StringOps$.html#findReplace(s:String,caseSensitive:Boolean,fr:Seq[(String,String)]):String", "kind" : "def"}, {"label" : "findRegexReplace", "tail" : "(s: String, zomRegex: Seq[(Regex, String)]): String", "member" : "s_mach.string.impl.StringOps.findRegexReplace", "link" : "s_mach\/string\/impl\/StringOps$.html#findRegexReplace(s:String,zomRegex:Seq[(scala.util.matching.Regex,String)]):String", "kind" : "def"}, {"label" : "findRegexReplaceMatch", "tail" : "(s: String, zomRegex: Seq[(Regex, (Match) ⇒ String)]): String", "member" : "s_mach.string.impl.StringOps.findRegexReplaceMatch", "link" : "s_mach\/string\/impl\/StringOps$.html#findRegexReplaceMatch(s:String,zomRegex:Seq[(scala.util.matching.Regex,util.matching.Regex.Match=>String)]):String", "kind" : "def"}, {"label" : "ensureSuffix", "tail" : "(s: String, suffix: String): String", "member" : "s_mach.string.impl.StringOps.ensureSuffix", "link" : "s_mach\/string\/impl\/StringOps$.html#ensureSuffix(s:String,suffix:String):String", "kind" : "def"}, {"label" : "match2tuple", "tail" : "(m: Match): (Int, Int)", "member" : "s_mach.string.impl.StringOps.match2tuple", "link" : "s_mach\/string\/impl\/StringOps$.html#match2tuple(m:util.matching.Regex.Match):(Int,Int)", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/string\/impl\/StringOps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/string\/impl\/StringOps$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/string\/impl\/StringOps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/string\/impl\/StringOps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/string\/impl\/StringOps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/string\/impl\/StringOps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/string\/impl\/StringOps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/impl\/StringOps$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/impl\/StringOps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/string\/impl\/StringOps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/string\/impl\/StringOps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/string\/impl\/StringOps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/string\/impl\/StringOps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/string\/impl\/StringOps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/string\/impl\/StringOps$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/string\/impl\/StringOps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/string\/impl\/StringOps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/string\/impl\/StringOps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/string\/impl\/StringOps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};